// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace EfForeignKeyIssue.Models;

public partial class MyDbContext : DbContext
{
    public MyDbContext()
    {
    }

    public MyDbContext(DbContextOptions<MyDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<DbTask> Tasks { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("CONNECTION STRING GOES HERE");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.PkId).HasName("schedules_pk");

            entity.ToTable("schedule", "Scheduler");

            entity.Property(e => e.PkId).HasColumnName("pk_id");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('')")
                .HasColumnName("description");

            entity.HasMany(d => d.Groups).WithMany(p => p.Schedules)
                .UsingEntity<Dictionary<string, object>>(
                    "ScheduleTaskMapping",
                    r => r.HasOne<DbTask>().WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("schedule_task_mapping_task_FK"),
                    l => l.HasOne<Schedule>().WithMany()
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("schedule_task_mapping_schedule_FK"),
                    j =>
                    {
                        j.HasKey("ScheduleId", "GroupId").HasName("schedule_task_mapping_pk");
                        j.ToTable("schedule_task_mapping", "Scheduler");
                        j.IndexerProperty<int>("ScheduleId").HasColumnName("schedule_id");
                        j.IndexerProperty<int>("GroupId").HasColumnName("group_id");
                    });
        });

        modelBuilder.Entity<DbTask>(entity =>
        {
            entity.HasKey(e => e.PkId).HasName("tasks_pk");

            entity.ToTable("tasks", "Scheduler");

            entity.Property(e => e.PkId).HasColumnName("pk_id");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasDefaultValueSql("('Integration task')")
                .HasColumnName("description");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}